import java.util.Arrays;

public class BoatstoSavePeople {
	public static void main(String[] args) {
		int[] arr = new int[] { 7,35,89,81,93,59,33,49,50,25,88,6,34,98,57,95,1,82,63,86,74,100,34,75,85,70,80,82,28,29,41,3,91,82,14,82,33,61,49,45,61,91,42,3,86,96,81,16,43,76,87,87,93,65,14,43,96,14,94,36,60,82,10,12,48,91,98,66,20,80,38,27,59,45,52,98,4,88,44,85,88,74,48,53,60,40,72,86,34,96,57,30,17,73,29,81,95,36,38,31,26,100,83,87,3,96,83,83,93,42,8,57,54,22,75,99,72,80,78,82,16,61,61,88,44,27,54,50,2,5,19,50,66,53,58,100,9,38,55,80,89,63,66,90,80,59,2,42,8,97,83,35,11,57,36,73,84,60,82,1,24,44,47,82,18,58,54,65,2,5,10,40,60,74,66,11,87,40,82,18,39,68,64,52,93,82,60,68,42,52,64,84,20,46,19,20,4,12,76,33,31,15,58,42,6,39,81,76,98,86,50,80,79,42,39,57,45,63,82,92,65,53,22,40,23,73,55,16,17,3,12,62,64,53,79,55,26,77,37,5,22,45,62,78,87,78,76,59,20,67,70,27,38,30,100,70,36,20,35,25,84,19,38,54,26,17,97,91,3,54,5,44,11,81,21,31,9,97,51,43,56,18,80,29,85,74,30,49,30,95,85,54,69,8,81,36,27,33,89,11,99,47,63,51,7,77,41,49,83,32,15,5,69,7,60,7,12,40,30,11,95,95,97,99,91,57,41,75,53,23,78,17,66,95,54,15,36,52,44,15,60,89,98,19,66,3,15,52,61,25,74,90,98,11,69,53,70,94,29,89,10,5,93,26,72,22,59,35,73,75,91,81,46,13,68,44,71,99,34,45,35,33,25,36,37,36,95,38,2,97,59,31,80,3,86,12,3,15,84,6,92,30,20,66,25,57,77,67,32,64,63,3,47,64,39,17,92,2,87,17,100,92,10,77,67,87,50,32,80,74,54,99,77,50,93,51,85,5,13,22,24,15,5,56,59,73,62,46,45,2,62,64,63,97,71,22,62,56,68,60,76,46,57,93,27,67,74,83,58,98,97,52,46,11,59,32,69,72,87,75,81,85,100,33,59,56,58,67,94,2,32,47,52,91,50,24,86,52,79,27,95,41,45,48,34,76,58,61,61,30,35,10,39,27,35,63,69,75,23,19,97,47,48,9,69,18,6,26,97,34,6,68,18,29,48,55,31,93,76,63,8,82,83,81,84,18,90,30,27,1,16,35,24,88,5,45,38,87,84,33,68,46,26,70,47,70,74,57,27,14,2,43,67,83,29,7,49,34,34,5,52,45,71,68,39,5,98,21,74,57,4,74,98,15,72,58,55,44,45,18,37,68,85,74,63,23,1,86,77,95,14,98,34,57,2,80,94,95,16,14,55,41,2,29,78,77,24,92,37,77,35,99,68,38,7,19,95,58,80,22,53,61,94,51,93,32,59,63,10,17,26,27,19,42,10,15,86,18,45,9,80,27,67,82,42,21,16,46,60,66,59,25,1,14,45,97,57,98,85,100,29,69,44,88,62,41,95,85,50,43,41,41,31,17,84,13,63,16,87,23,13,2,91,79,32,87,51,22,57,3,70,28,38,87,63,96,23,1,86,61,14,26,95,58,56,78,91,40,83,87,96,49,90,83,47,72,14,75,40,83,35,80,30,50,40,100,25,85,81,95,70,50,95,4,91,75,21,30,87,11,28,16,21,14,35,88,60,16,11,100,26,29,19,28,95,38,42,34,60,53,27,11,56,56,6,35,43,49,32,67,81,12,43,67,60,88,88,55,89,81,16,1,39,37,3,82,52,98,84,81,40,95,72,11,56,22,65,41,5,90,92,64,21,42,70,12,21,10,94,76,14,24,66,98,22,85,44,86,2,53,42,79,97,11,76,37,89,87,100,51,50,22,6,91,11,44,11,4,33,12,29,100,25,79,79,7,40,15,33,14,14,72,6,48,56,43,25,63,10,18,30,45,21,65,27,48,81,67,61,84,41,44,40,14,60,50,80,61,35,86,28,31,87,98,22,23,58,3,82,43,74,3,80,55,3,5,41,63,46,65,91,39,43,80,5,34,7,66,68,67,63,75,2,64,64,84,76,4,60,42,28,11,13,16,24,49,61,26,21,53,49,8,23,40,94,46,25,88,100,16,88,50,26,82,55,56,70,40,71,75,81,5,31,59,67,60,81,34,64,54,85,30,54,24,93,97,31,87,44,30,39,75,99,84,85,31,20,25,95,17 };
		System.out.println(new BoatstoSavePeople().numRescueBoats(arr, 100));
	}

	public int numRescueBoats(int[] people, int limit) {
		int result = 0;
		Arrays.sort(people);
		boolean[] found = new boolean[people.length];
		for (int i = 0; i < people.length; i++) {
			if (!found[i]) {
				int i1 = people[i];
				int index = Arrays.binarySearch(people, i + 1, people.length, limit - i1);
				if (index > -1) {
					if (found[index]) {
						int newIndex = index + 1;
						while (newIndex < people.length && (people[newIndex] != people[index] || found[newIndex])) {
							newIndex++;
						}
						if (newIndex == people.length) {
							newIndex = index - 1;
							while (newIndex > -1 && (people[newIndex] != people[index] || found[newIndex])) {
								newIndex--;
							}
						}
						if (newIndex > -1 && newIndex < people.length) {

							result++;
							found[i] = true;
							found[newIndex] = true;
						}
					} else {
						result++;
						found[i] = true;
						found[index] = true;
					}

				}
			}
		}
		int minIndex = 0;
		for (int i = people.length - 1; i > -1; i--) {
			if (!found[i]) {
				while (minIndex < i && found[minIndex]) {
					minIndex++;
				}
				result++;
				if (people[minIndex] + people[i] < limit) {
					found[minIndex] = true;
				}
				if (minIndex >= i)
					break;
			}
		}
		return result;
	}
}
